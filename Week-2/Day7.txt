1-Given a function rand(5), implement rand(7)
	i = 5*foo() + foo() - 5; 
    if (i < 22) 
        return i%7 + 1; 



2-Given a function rand(6), implement rand(9)
	there are 36 pairs, so divide all the ranges in set of 9

3- There are 10 slaves, and each slave process a bit of a number, find the minimum number of call that you should make to find which slaves are dead.

Uniquely map so that when a slave is dead, it result in loss of that number.

Euclid Algorithm
	gcd(a,b)
	{
		if (b == 0) 
        	return a; 
    	return gcd(b, a % b);  
	}
	Time complexity is O(log n) as in each step the value of max get halved

Prime factorization
	build a seive and at each index we will store the smallest prime factor at each index.

	spf(n,-1)
		if(prime[i]==i)
		{
			for(int j=2;i*j<n;j++)
			{
				if(prime[j]!=-1)
				{
					prime[j]=i;
				}
			}
		} 


Assignment Day of the week

1- Find day of the year
	static int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 }; 
    y= year -= month < 3; 
    int f= ( y + y/4 - y/100 + y/400 + t[m-1] + d) % 7;

   	 int countDivisors(int x) {
        int ans = 1;
        while(Spf[x] > 1) {
            int cnt = 1, u = Spf[x];
            while(Spf[x] == u) {
                cnt++;    x /= u;
            }
            ans *= cnt;
        }
        return ans;    
    }

2- Find it two rectangle overlap
3-City tour(Not able to understand)
