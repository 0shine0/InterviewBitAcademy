Modular Arithmetic

Rules:
	(a-b)%m= (a-b+m)%m

1- How many of pairs that are divisible by k?
	make a map of (n%k,freq) 
	(a+b)%m = (a%m + b%m) then to be divisible sum must be either be 0 or m

2- Given array find triplet divisible by k?
	for i=0 to m-1
		for j=i to m-1
			k= m-(i+j)
		if(k<j) continue
		case 1: all equal i,j,k
		case 2: two are equal
		case 3: all different

3- Number of distinct pair of braces from n pair of braces
	If I know the count of n-1 pairs we can easily calculate it

	Fix the last pair

	Case 1- all pairs inside C(N-1) * C(0)
	Case 2 - some pairs i inside and some outside C(i) * C(N-1-i)
	Case 3 - all pairs outside  C(0) * C(N-1)

	Cn= sumation(C(i)*C(n-i))    (i E (0,N-1))


4- You have N*N grid where either you can move right or down, how many paths are there
	There are N-1 horizontal and N-1 vertical so there are some right moves and some down string

	(2n-1)C(n-1)

5- You have N*N grid where either you can move right or down, how many paths are there without crossing major diagonal
	
	for every j j>i;
	so it case of balanced paranthesis in which opening brace will never be greater than closing
	so ans is n-1 th catalyn number

6- Count number of times digit 1 is coming in number less than N
	Look at place value
	1 at unit place
	1 at tens place ...

	public int solve(int a) {
        int n = a, x = 1, ans = 0;
        while(n > 0) {
            int d = n % 10;
            n /= 10;
            ans += n * x;
            if(d == 1)  ans += a % x + 1;
            else    ans += x;
            x *= 10;
        }
        return ans;
    }

	int power(int x, unsigned int y, int p) 
	{ 
	    int res = 1;     
	    x = x % p;
	    while (y > 0) 
	    { 
	        if (y & 1) 
	            res = (res*x) % p; 
	        y = y>>1;
	        x = (x*x) % p;   
	    } 
	    return res; 
	} 


	nth catalyn number= (1/n+1) 2nCn
	Revise for nth Catalyn number, its application, Fermat's theorem, Wilson's theorem, Euler totient function, Extended Euclid algorithm.


Assignment
	1- return the overlapping area of the two rectangles.
	 bottom left corner is (A, B) and top right corner is (C, D)

	 	ans= (max(A,E)-min(C,G)) * (max(B,F)*min(D,H))
	 	return max(ans,0)

	2- Find rank of the word in sorted permutation
		for every A[i] count number of A[j], A[j]<A[i]
		start from last to first 

		i=H.size()-1, j=0
			ans+=H[i]*factoril(j)

		return ans=ans+1

	3- First few magic numbers are 5, 25, 30(5 + 25), 125, 130(125 + 5), find nth number


